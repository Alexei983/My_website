const express = require('express')
const { createHandler } = require("graphql-http/lib/use/express")
const { buildSchema } = require("graphql")
const { ruruHTML } = require("ruru/server")
const sequelize = require('./db.js')
const { Project } = require('./models/models.js')

const app = express()
const PORT = 3000

app.use(express.static('images'))

let schema = buildSchema(`
	type Project {
		id: ID!
		title: String!
		text: String!
		link: String
		Images: String!	
	}	

	type Query{
		getAllProjects: [Project],
		getProject: Project,
	}
`)

let root = {
	getAllProjects async () {
		const projects = await Project.getAll();
		retun 0;
	},
	getProject() {
		return 0
	}
}



app.all('/graphql', createHandler({ 
	schema: schema,
	rootValue: root,
	})
)

app.get("/", (_req, res) => {
	res.type("html")
	res.end(ruruHTML({endpoint: "/graphql" }))
})



const start = async () => {
	try {
		await sequelize.authenticate()
		await sequelize.sync({force:false})
		app.listen(PORT, () => console.log(`Server started on port ${PORT}`))
	} catch (e) {
		console.log(e)
	}
}

start()
